/*
 * This file is generated by jOOQ.
 */
package org.jesse.passkey.dbaccess.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import org.jesse.passkey.dbaccess.tables.PasskeyDemo;
import org.jesse.passkey.dbaccess.tables.records.PasskeyDemoRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PasskeyDemoDao extends DAOImpl<PasskeyDemoRecord, org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo, String> {

    /**
     * Create a new PasskeyDemoDao without any configuration
     */
    public PasskeyDemoDao() {
        super(PasskeyDemo.PASSKEY_DEMO, org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo.class);
    }

    /**
     * Create a new PasskeyDemoDao with an attached configuration
     */
    public PasskeyDemoDao(Configuration configuration) {
        super(PasskeyDemo.PASSKEY_DEMO, org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo.class, configuration);
    }

    @Override
    public String getId(org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo object) {
        return object.getCredId();
    }

    /**
     * Fetch records that have <code>cred_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfCredId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.CRED_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cred_id IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByCredId(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.CRED_ID, values);
    }

    /**
     * Fetch a unique record that has <code>cred_id = value</code>
     */
    public org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo fetchOneByCredId(String value) {
        return fetchOne(PasskeyDemo.PASSKEY_DEMO.CRED_ID, value);
    }

    /**
     * Fetch records that have <code>user_handle BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfUserHandle(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.USER_HANDLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_handle IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByUserHandle(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.USER_HANDLE, values);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByUserName(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>pub_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfPubKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.PUB_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pub_key IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByPubKey(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.PUB_KEY, values);
    }

    /**
     * Fetch records that have <code>cred_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfCredType(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.CRED_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cred_type IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByCredType(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.CRED_TYPE, values);
    }

    /**
     * Fetch records that have <code>transports BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfTransports(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.TRANSPORTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transports IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByTransports(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.TRANSPORTS, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByStatus(String... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfCreateTime(LocalDateTime lowerInclusive,
        LocalDateTime upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByCreateTime(LocalDateTime... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive,
        LocalDateTime upperInclusive) {
        return fetchRange(PasskeyDemo.PASSKEY_DEMO.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<org.jesse.passkey.dbaccess.tables.pojos.PasskeyDemo> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(PasskeyDemo.PASSKEY_DEMO.UPDATE_TIME, values);
    }

}
